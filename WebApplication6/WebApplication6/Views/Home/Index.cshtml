@using Newtonsoft.Json;
@model WebApplication6.Models.Numbers
@{
    ViewBag.Title = "Index";
}
<script>
    $(document).ready(function () {
        var vm = new NumbersViewModel();
        vm.data(ko.mapping.fromJS(@(Html.Raw(JsonConvert.SerializeObject(Model)))));
        vm.init();
        ko.applyBindings(vm, $('#content').get(0));
        $("#button").click(function () {
            var item = $("#newRandom").val();
            var self = this;

            $.ajax({
                url: '/Home/Index',
                type: 'POST',
                dataType: 'json',
                data: { "value": item },
                success: function (data) {
                    vm.data(data);
                }
            });
        });
    });

</script>
<div id="content">
    <h1>Add random numbers</h1>
    <div id="randomNumbers">
        <!-- ko foreach: $root.data().randomNumbers.Numbers -->
        <p data-bind="text: $data"></p>
        <!--/ko-->
    </div>

    <input type="text" id="newRandom" name="value" />
    <input type="submit" id="button" value=" + " />

    @*<button data-bind="click: function() { $root.addRandomNumber($('#newRandom').val()); }">+</button>*@
    <hr style="height:5px" />

    
    <h1>Add number</h1>
    <!-- ko foreach: $root.data().staticNumbers.Numbers -->
    <!-- ko if: $index() % 5 == 0 -->
    <hr />
    <!--/ko-->
    <div class="number" id="staticNumbers" data-bind="text: $data"></div>
    <!--/ko-->
    <input type="color" id="newColor" />
    <input type="text" id="newStatic" />
    <button data-bind="click: function() { $root.addStaticNumber($('#newColor').val(), $('#newStatic').val()); }">+</button>
</div>

<script>
    var editing = false;

    if (document.getElementById && document.createElement) {
        var butt = document.createElement('BUTTON');
        var buttext = document.createTextNode('Ready!');
        butt.appendChild(buttext);
        butt.onclick = saveEdit;
    }

    function catchIt(e) {
        if (editing) return;
        if (!document.getElementById || !document.createElement) return;
        if (!e) var obj = window.event.srcElement;
        else var obj = e.target;
        while (obj.nodeType != 1) {
            obj = obj.parentNode;
        }
        if (obj.tagName == 'INPUT') return;
        while (obj.nodeName != 'P' && obj.nodeName != 'HTML') {
            obj = obj.parentNode;
        }
        if (obj.nodeName == 'HTML') return;
        var x = obj.innerHTML;
        var y = document.createElement('INPUT');
        var z = obj.parentNode;
        z.insertBefore(y, obj);
        z.insertBefore(butt, obj);
        z.removeChild(obj);
        y.value = x;
        y.focus();
        editing = true;
    }

    function saveEdit() {
        var area = document.getElementsByTagName('INPUT')[0];
        var y = document.createElement('P');
        var z = area.parentNode;
        y.innerHTML = area.value;
        z.insertBefore(y, area);
        z.removeChild(area);
        this.parentElement.removeChild(this);
        editing = false;
        z.removeChild(document.getElementsByTagName('button')[0]);
    }

    document.onclick = catchIt;
</script>